package main

import (
	"testing"
)

var tinit = "t:`a`b`c!(1+!10;2+!10;`q`w`e`q`w`e`q`w`e`q);T:`a`b`c`d!(1+!10;2+!10;`q`w`e`q`w`e`q`w`e`q;0 0 0 0 0 1 1 1 1 1)"
var ttests = [][2]string{
	{"{a>5}#t", "`a`b`c!(6 7 8 9 10;7 8 9 10 11;`e`q`w`e`q)"},
	{"{`sum`prod!(a+b;a*b)}#t", "`sum`prod!(3 5 7 9 11 13 15 17 19 21;2 6 12 20 30 42 56 72 90 110)"},
	{"t{~c=`q}", "`a`b`c!(2 3 5 6 8 9;3 4 6 7 9 10;`w`e`w`e`w`e)"},
	{"+/'`a`b#t", "`a`b!(55;65)"},
	{"(*;+/)'`a`b#t", "``a`b!(`*`+{;(1;55);(2;65))"},
	{"(`first`sum!(*;+/))'`a`b#t", "``a`b!(`first`sum;(1;55);(2;65))"},
	{"`c=t", "(`c!,`q`w`e;`a`b!((1 4 7 10;2 5 8;3 6 9);(2 5 8 11;3 6 9;4 7 10)))"},
	{"`c+/'t", "`c`a`b!(`q`w`e;22 15 18;26 18 21)"},
	{"=&T`c`d", "(((`q;0);(`w;0);(`e;0);(`e;1);(`q;1);(`w;1));(0 3;1 4;2;5 8;6 9;7))"},
	{"`c`d=T", "(`c`d!(`q`w`e`e`q`w;0 0 0 1 1 1);`a`b!((1 4;2 5;3;6 9;7 10;8);(2 5;3 6;4;7 10;8 11;9)))"},
	{"`c`d+/'T", "`c`d`a`b!(`q`w`e`e`q`w;0 0 0 1 1 1;5 7 3 15 17 8;7 9 4 17 19 9)"},
	{"`c`d(*;+/)'T", "`c`d`*a`+{a`*b`+{b!(`q`w`e`e`q`w;0 0 0 1 1 1;1 2 3 6 7 8;5 7 3 15 17 8;2 3 4 7 8 9;7 9 4 17 19 9)"},
	{"`c`d(`\"first \"`\"sum \"!(*;+/))'T", "`c`d`first a`sum a`first b`sum b!(`q`w`e`e`q`w;0 0 0 1 1 1;1 2 3 6 7 8;5 7 3 15 17 8;2 3 4 7 8 9;7 9 4 17 19 9)"},
}

func TestT(t *testing.T) {
	kinit()
	dx(eval(tinit))
	for _, tc := range ttests {
		s := kstval(tc[0])
		if s != tc[1] {
			t.Fatalf("%s\ngot:%s\nexp:%s\n", tc[0], s, tc[1])
		}
	}
	bleak()
}
