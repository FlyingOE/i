<html>
<head><meta charset="utf-8"><title>ktye</title></head>
<link rel='icon' type'image/png' href="k32.png">
<style>
 html,body,textarea{height:100%;margin:0;padding:0;overflow:hidden;}
 #kons{top:0;left:0;width:100%;height:100%;position:absolute;background:black;color:white;border:0pt;resize:none;}
 #cnv{width:100;height:100;top:0;right:0;position:absolute;}
 #dl{display:none;}
</style>
<body>
<textarea id="kons" spellcheck="false"></textarea>
<canvas id="cnv"></canvas>
<a id="dl"></a>
<script>

{{wx.js}}
{{k.b64}}
{{h.b64}}
{{rev}}
var f = new Object() // memfs
function sa(s){var r=new Uint8Array(new ArrayBuffer(s.length));for(var i=0;i<s.length;i++)r[i]=s.charCodeAt(i);return r}
var kwasm = sa(atob(r))
const go = new Go()
f["rev"] = sa(rev)

// kons (k console)
var hit = kons
var konstore = ""
var edname = ""
var ed = false
var ctx
function initKons() {
 var hold = false
 kons.onkeydown = function(evt) {
  if(evt.which === 27) {
   evt.preventDefault()
   if (ed) { qed(); hold=true }
   hold = !hold
   kons.style.background = hold ? "#78909C" : "black"
   kons.style.color = "white"
   cnv.width = 0; cnv.style.width = 0
   hit = kons
  } else if (evt.which === 13) {
   if (hold || ed) return
   evt.preventDefault()
   var a = kons.selectionStart
   var b = kons.selectionEnd
   var s = kons.value.substring(a, b)
   if (b == a) {
    if (kons.value[a] == "\n") a -= 1
    a = kons.value.lastIndexOf("\n", a)
    if (a == -1) a = 0
    b = kons.value.indexOf("\n", b)
    if (b == -1) b = kons.selectionEnd
    s = kons.value.substring(a, b)
   }
   if (kons.selectionEnd != kons.value.length) O(s)
   O("\n")
   s = s.trim()
   if (s === "\\c") { kons.value=" "; cnv.width=0; cnv.stylewidth=0; return }
   if (s === "\\h") { O(atob(h));P(); return }
   if (s.substr(0,2) === "\\e") { P(); edit(s.substr(2)); return }
   if (s.substr(0,2) === "\\w") { download(s.substr(2)); P(); return }
   if (s === "\\lf") { s = "\\m #:'.fs" }
   E(s)
  }
 }
 kons.onmousedown = function(e) { hit=kons;kons.style.color="white" }
 ctx = cnv.getContext('2d')
}
function O(s) { kons.value += s }
function P() { kons.value += " "; kons.scrollTo(0, kons.scrollHeight) }
var u8
function E(s) { 
 hash(s)
 kio = s
 try { 
  K.K();Out();K.Save()
 } catch(e) { // panic message is stored to pnk
  var p = K.Srcp()
  pnk = (pnk.substr(0,7) === "panic: ") ? pnk.substr(7) : pnk
  kio = (p > 0 && p < 64) ? " ".repeat(p) + "^" + pnk + "\n" : pnk+"\n"
  pnk = ""
  Out();K.Rest()
 }
}
function Out() { // update kons and canvas
 var n = imgw*imgh
 if (n > 0) {
  cnv.style.width = imgw
  cnv.style.height = imgh
  cnv.width = imgw
  cnv.height = imgh
  u8 = new Uint8ClampedArray(K.memory.buffer, K.Img(), 4*n)
  ctx.putImageData(new ImageData(u8, imgw, imgh), 0, 0)
  imgw = 0; imgh = 0
 }
 O(kio);P();kio="";
}
function edit(name) { 
 edname = name; ed = true; konstore = kons.value; 
 var u = getfile(name.trim())
 if (u === false) {
  kons.value = ""
 } else {
  kons.value = new TextDecoder("utf-8").decode(u)
 }
 kons.style.background = "#FFFFEA"
 kons.style.color = "black"
 kons.scrollTo(0,0);
}
function qed() {
 var u = new TextEncoder("utf-8").encode(kons.value)
 putfile(edname, u)
 kons.value = konstore; kons.scrollTo(0, kons.scrollHeight)
 ed = false
}
function hash(s){window.location.hash=encodeURIComponent(s.trim())}

function download(name) {
 name = (name === "s") ? "k.ws" : name.trim()
 var u = getfile(name)
 if (u !== false) {
  var b = new Blob([u], {type:"application/octet-stream"})
  dl.href = URL.createObjectURL(b)
  dl.download = name
  dl.click()
 }
}
function getfile(name) { // as Uint8Array
 console.log("getfile", name)
 kio = name
 var p = K.Get()
 var n = Number(kio);kio=""; n = isNaN(n) ? 0 : n;
 console.log("P", p, "n", n)
 if (n > 0) {
  return new Uint8Array(K.memory.buffer, p, n)
 }
 return false
}

// interactive callbacks on canvas
function ui(a,b,c,d,e,f,g){
	var p = K.P()
	var m = new Uint8Array(K.memory.buffer)
	console.log(p)
	try{
		K.Ui(a,b,c,d,e,f,g)
	} catch {
		kio = pnk + "\n"
		pnk = ""
	}
	if (kio.length > 0) Out()
};
function pd(e){if(e){e.preventDefault();e.stopPropagation()}};
function mod(e){return Number(e.shiftKey)+2*Number(e.altKey)+4*Number(e.ctrlKey)};
function down(e){hit=cnv;kons.style.color="grey";xd=e.clientX;yd=e.clientY;pd(e)};
function up(e){pd(e);ui(1,e.button,xd,e.clientX,yd,e.clientY,mod(e))};
function wheel(e){var x=e.clientX;var y=e.clientY;var m=(e.deltaY>0)?4:(e.deltaY<0)?5:null;if(m)ui(1, m,x,y,x,y,mod(e))};
function keycode(e){var k=e.keyCode;return (e.key.length==1)?e.key.charCodeAt():(k==8)?8:(k==9)?9:(k==13)?13:(k==27)?27:(k==46)?127:(k>32&&k<41)?k-19:null};
function key(e){var k=keycode(e);if(!k)return;pd(e);ui(0,k,0,0,0,0,mod(e));};
function nomenu(e){pd(e)};
function ae(x,y,z){x.addEventListener(y,z)};
ae(cnv,'mouseup',up);ae(cnv,'mousedown',down);ae(cnv,'wheel',wheel);ae(cnv,'contextmenu',nomenu);
ae(window,'keydown',function(e){if(hit==cnv){key(e);return}})


// drop files (store in k-tree .fs)
window.ondragover=function(e){pd(e)}
window.ondrop=function(e){pd(e);if (e.dataTransfer.items){for (var i=0;i<e.dataTransfer.items.length;i++){if(e.dataTransfer.items[i].kind=='file'){var file=e.dataTransfer.items[i].getAsFile();addfile(file)}}}else for(vari=0;i<e.dataTransfer.files.length;i++)addfile(e.dataTransfer.files[i])}
function addfile(x){
  var r = new FileReader()
  r.onload = function(){
   var u = new Uint8Array(r.result)
   putfile(x.name, u)
  }
  r.readAsArrayBuffer(x)
}
function putfile(name, u) { // from Uint8Array
  var p = K.P()
  if (name.endsWith(".ws") == false) {
   kio = name
   p = K.Store(u.length)
  }
  var d = new Uint8Array(K.memory.buffer, p, u.length)
  d.set(u)
}

var kio = 0
var mat = ""
var imgw = 0
var imgh = 0
var K
(async () => {
  initKons()
  const module = await WebAssembly.compile(kwasm.buffer);
  const k = await WebAssembly.instantiate(module, go.importObject);
  go.run(k)
  kio = String(kio) //in main()
  K = k.exports
  kons.value = "i@" + rev + " " + kio + "MB\n "
  if(window.location.hash.length>1)
   kons.value += decodeURIComponent(window.location.hash.substr(1))
  K.Us(window.innerWidth, window.innerHeight)
  kons.focus()
})();

</script>
</body>
</html>
