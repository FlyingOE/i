#include<stdlib.h>
#include<stdio.h>
#include<stddef.h>
#include<malloc.h>
#include<math.h>
#define R return
typedef int32_t I;typedef int64_t J;typedef double F;typedef uint32_t uI;typedef uint64_t uJ;
I __builtin_clz(I x){I r;__asm__("bsr %1, %0" : "=r" (r) : "rm" (x) : "cc");R r^31;}
void trap() { exit(1); }
char *MC;I* MI;J* MJ;F *MF;I ini(I);
I ini(I x0){I x1=0;I x2=0;MJ[0]=(J)1130366807310592;MI[8]=(I)x0;x1=64;x2=8;while((((uI)x2)<((uI)x0))){MI[(x2>>2)]=(I)x1;MI[(x1>>2)]=(I)x2;x1=((x1)*(2));x2=((x2)+(1));}R x0;}
// Postfix test interface: e.g. 5 mki til rev fst 0 500 dump
I pop1(I *s, I n, I *x) {
	*x = s[n-1];
	return n-1;
}
I pop2(I *s, I n, I *x, I *y) {
	*x = s[n-2];
	*y = s[n-1];
	return n-2;
}
I push(I *s, I n, I x) {
	s[n] = x;
	return n+1;
}
I f1(I (*f)(I), I *s, I n) {
	printf("%d: ", s[n-1]);
	s[n-1] = f(s[n-1]);
	printf("%d\n", s[n-1]);
	return n;
}
I f2(I (*f)(I,I), I *s, I n) {
	printf("%d %d: ", s[n-2], s[n-1]);
	s[n-2] = f(s[n-2], s[n-1]);
	printf("%d\n", s[n-2]);
	return n-1;
}
I Number(char *s) {
	R strtol(s, (char **)NULL, 10);
}
I Match(char *a, char *b) {
	for (I i=0; ;i++) {
		if (a[i] != b[i]) return 0;
		if (a[i] == 0)    return 1;
	}
}
I Dump(I *s, I n) {
	I x = s[n-2];
	I y = s[n-1];
	I p = 0;
	printf("\n%08x  ", x);
	for (I i=x; i<x+y; i++) {
		printf("%02x", (uint8_t)MC[i]);
		p++;
		if ((i > x) && (p%32 == 0)) {
			printf("\n%08x  ", i+1);
		} else if ((i > x) && (p%4 == 0)) {
			printf(" ");
		}
	}
	return n-2;
}
I main(int args, char **argv){
	MC=malloc(64*1024);MI=(I*)MC;MJ=(J*)MC;MF=(F*)MC;
	I stack[32];
	I i, n = 0;
	I x, y, r;
	char *a;
	ini(16);
	for (i=1; i<args; i++) {
		a = argv[i];
		if (a[0] >= '0' && a[0] <= '9') {
			n = push(stack, n, Number(a));
			continue;
		}
		printf("%s ", argv[i]);
		if (Match("mki", a)) {
			n = f1(mki, stack, n);
		} else if (Match("dump", a)) {
			n = Dump(stack, n);
		} else {
			printf("arg!");
			trap();
		}
	}
}
