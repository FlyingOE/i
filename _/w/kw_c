// k/ui (win32)
// tcc -o kw.exe kw_c
#include <windows.h>
#include "k.h"

char szAppName[] = "k"; // The name of this application
char szTitle[]   = "k"; // The title bar text

LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam) {
	switch (message) {
        case WM_CREATE: // startup
		break;

	case WM_DESTROY:
		PostQuitMessage(0);
		break;

        case WM_RBUTTONUP:
		DestroyWindow(hwnd);
		break;

        case WM_KEYDOWN:
		if (VK_ESCAPE == wParam) DestroyWindow(hwnd);
		break;

        case WM_PAINT: {
		PAINTSTRUCT ps;
		HDC         hdc;
		RECT        rc;
		hdc = BeginPaint(hwnd, &ps);
		GetClientRect(hwnd, &rc);
		SetTextColor(hdc, RGB(240,240,96));
		SetBkMode(hdc, TRANSPARENT);
		DrawText(hdc, "+/1 2 3", -1, &rc, DT_CENTER|DT_SINGLELINE|DT_VCENTER);
		EndPaint(hwnd, &ps);
		break;
	}
	default:
		return DefWindowProc(hwnd, message, wParam, lParam);
	}
	return 0;
}

int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {
	MSG msg;
	WNDCLASS wc;
	HWND hwnd;

	ZeroMemory(&wc, sizeof wc);
	wc.hInstance     = hInstance;
	wc.lpszClassName = szAppName;
	wc.lpfnWndProc   = (WNDPROC)WndProc;
	wc.style         = CS_DBLCLKS|CS_VREDRAW|CS_HREDRAW;
	wc.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH);
	wc.hIcon         = LoadIcon(NULL, IDI_APPLICATION);
	wc.hCursor       = LoadCursor(NULL, IDC_ARROW);

	if (FALSE == RegisterClass(&wc)) return 0;
	hwnd = CreateWindow(szAppName, szTitle, WS_OVERLAPPEDWINDOW|WS_VISIBLE, CW_USEDEFAULT, CW_USEDEFAULT, 360, 240, 0, 0, hInstance, 0);
  	if (NULL == hwnd) return 0;
	while (GetMessage(&msg, NULL, 0, 0) > 0) {
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return msg.wParam;
}
