j stack language            !trace                  list operators                      
                                                      #     length/non-list: -1         
32-bit type system        parse                       ,     cat                         
  ..000 list[quotation]     (comment)                []i@   index                       
  ....1 int  x>>1           abc   symbol (max 6)     [a]i v$store       [a]"#v$ (append)
  ...10 symbol x>>2         123   int (max 31 bit)                                      
  ..100 operator x>>3       [..]  list/quote        assign/quote/exec                   
                                                      [p][a]: assign [p] to symbol a    
heap memory               numeric operators (dyadic)  a       lookup symbol a and exec  
  0     total memory(log)    +-*/% arith              [p].    exec                      
  1     zero                 <=>   compare                                              
  2     symbol list          &^    min max          control                             
  3     value list                                    c[t][e]?      (if c then t else e)
  4..32 free list         stack operators             ;  tail recurse(nyi)              
  33... data(buckets)       ~"_|  swap dup pop roll   }  pop from stack push to register
                                                      {  pop from register push to stack
(nyi ;print? trap? `chars` ;tail-recurse)                                               
