package main

import (
	"fmt"
	"os"
	"bytes"
	"strings"
)

// the program copies all src files from ../ to this directory.
// it converts debug comments into code "//kdb:"
// and adds source location to each call to panic (int).
// the file src.map int->file:line is written.

var M []string

func main() {
	files, e := os.ReadDir("..")
	fatal(e)
	for _, file := range files {
		name := file.Name()
		if name == "k_test.go" {
			continue
		}
		if strings.HasSuffix(name, ".go") {
			dofile(name)
		}
	}
	fatal(os.WriteFile("src.map", []byte("["+strings.Join(M, ",")+"]\n"), 0644))
}
func dofile(file string) {
	b, e := os.ReadFile("../" + file)
	fatal(e)
	v := bytes.Split(b, []byte{10})
	for i, b := range v {
		b = bytes.Replace(b, []byte("//kdb:"), nil, 1)
		if bytes.Contains(b, []byte("func trap(")) {
			b = bytes.Replace(b, []byte("trap("), []byte("trap(p int32,"), 1)
		} else if bytes.Contains(b, []byte("trap(")) {
			t := fmt.Sprintf("trap(%d,", len(M))
			M = append(M, fmt.Sprintf("\"%s %d\"", file, 1+i))
			b = bytes.Replace(b, []byte("trap("), []byte(t), 1)
		}
		v[i] = b
	}
	b = bytes.ReplaceAll(b, []byte("//kdb"), nil)
	fatal(os.WriteFile(file, bytes.Join(v, []byte{10}), 0644))
}
func fatal(e error) {
	if e != nil {
		panic(e)
	}
}
