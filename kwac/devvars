Proposal: device variables (devvars)

A device variable is an extension mechanism for k.
It is similar to /dev/files in unix.

A device variable is a special variable, that when read from or written to, executes get/set functions.
The functions are defined externally in the system embedding k.

In contrast to device files that work on byte streams, 
devvars get or set k values of any type possibly with indexing.

Let x be a devvar:
 x:y            /update x with y
 a:x            /copy value to a, a is a normal variable, not a devvar
 x[`Rate]:1000  /indexed assignment

Required interface
 get(x, idx)
 set(x, idx, y)

Example applications:
- stdio (get reads all stdin or one line, and returns a string; set writes $x to stdout)
- image (access pixels in a 2d matrix of a drawing canvas, or the screen)
- hardware access of embedded devices (sensors, motors, ...)
- database access
 
Consequences
 If x is set to a devvar, it persists and cannot be reassigned.
 Read after assign, does not have to return the same value.
 A devvar is not bound to a k type, it could behave differently depending on the input values.
