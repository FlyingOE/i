/ kwac
ver:1                      / kwac version
iv:7                       / ⍳/k7 switch, iv is a devvar in ⍳ always returning 1
I:0x7f;F:0x7c              / i32;f64
x:0x2000;y:0x2001;z:0x2002 / local.get
x1:0x2001;x2:0x2002;x3:0x2003;x4:0x2004;x5:0x2005;x6:0x2006 / local.get
e:0#,0x00                  / empty []byte, "" is a string in ⍳
L:{0x0240034020,x,0x41016b22,x,0x4100480d01,y,0x0c000b0b} / loop y(body) n times, n stored at local index x is decremented

/ unsigned LEB128 this works for ⍳, TODO k7 needs modification; TODO: signed version
leb128:{{~64>*x}{((_(*x)%128);mod[128;*x])}\(x;0)}
lebu:{a:|1_leb128 x;(`c$(*a)@0),{`c$128+*|x}'a}
num:{|$[x<64;,`c$x;lebu x]}

c:{0x41,num[x]}            / i32.const
add:0x6a;sub:0x6b;mul:0x6c / i32.add,sub,mul
ltu:0x49                   / i32.lt_u
geu:0x4f;ge:0x4e           / i32.ge_u,ge_s
shl:0x74;shr:0x76          / i32.shl,shr_u
setb:0x3a0000;seti:0x360200 / i32.store8, i32.store
geti:0x280200              / i32.load
eq:0x46;eqz:0x45           / i32.eq,eqz
or:0x72;xor:0x73           / i32.or,xor (bitwise)
not:{0x417f,x,0x73}        / -1 x xor
f:`v!(I;e;e;c ver)         / exported function (single letter name)
f[`add]:(I;I,I;e;x,y,add)  / ret;args;locals;body (locals e.g.: I,I,F,F,F)
f[`sub]:(I;I,I;e;x,y,0x6b)

c:{0x41,num[x]}            / i32.const
a:{0x20,num[x]}            / get_local
s:{0x21,num[x]}            / set_local
t:{0x22,num[x]}            / tee_local
b1:0x0d01                  / br_if 01
L:{0x02400340,x,0x0c000b0b} / block loop x(body), break with b1
E:0x00                     / unreachable(trap)
If:{0x0440,x,0x0b}         / (cond) if then x
Else:{0x05,x}              / within If e.g.: If[x,Else y]

/ divide initial memory and set free bucket headers: i:15…7: p:1<<i m[p]:i m[4*i]:p
ini:,/(c 16;s 0;c 65536;s 1;L[,/(x;c 1;sub;t 0;c 7;ltu;b1;x1;c 1;shr;t 1;x;setb;x;c 4;mul;y;seti)])
ini,:,/(c 0;c 7;setb;c 4;c 16;seti;c 36;c 0;seti;c 512;c 73;setb)
lns:0 4 8 16 4 1 4 4 8                     / type sizes -ifzscgld
ini,:,/(520+4*!lns){(c x),(c y),seti}'lns  / set type size vector: m[(1<<9)+8+4*i]:lns[i]
/TODO: set pointer to k-tree at 8
f[`ini]:(e;e;I,I;ini)                      / start function

mk:,/(x;c[#lns];ge;If[E];x;c 4;mul;c 520;add;geti;s 2;y;c 0;ge;If[x2,y,mul,s 2];x2;c 8;add;s 2) / size needed including header
buk:{,/(c 32;x;c 1;sub;0x67;sub)}   / bucket from size: 32-clz(x-1)
mk,:,/(buk[x2];t 2;c 31;ge;If[E]) / bucket type needed bt:x2
grw:,/(c 1;c 4;geti;c 16;sub;shl;0x40001a;c 1;c 4;geti;shl;t 4;c 4;geti;seti;c 4;geti;c 4;mul;x4;seti;c 4;geti;c 1;add;c 4;seti)
mk,:,/(x2;s 3;L[,/(x3;c 4;geti;geu;If[grw];x3;c 4;mul;geti;t 4;b1;c 1;x3;add;s 3)]) / find free bucket fb:x3(>=x2), at x4(addr)
mk,:,/(x3;eqz;If[E];L[,/(x3;x2;eq;b1;x3;c 1;sub;t 3;c 4;mul;x4;seti;x4;x3;setb;x4;c 1;x3;shl;add;t 4;x3;setb)]) / split large buckets
mk,:,/(y;c 0;ltu;If[,/(x4;c 1;add;x;setb;Else[,/(x4;x2;x;c 5;shl;or;y;c 8;shl;or;seti)])];x4;c 4;add;c 1;seti;x4) / set header, refcount, return addr
f[`t]:(I;I,I;I,I,I;mk) /mk: make var x(type) y(len)


/ emit
o: 0x0061736d01000000         / header

/ 0x01(type section)
o,:0x01 
sig:{0x60,(`c$#x[1]),x[1],(`c$#x[0]),x[0]}
sl:{sig[x]}'f; sl:sl[!sl]    / list of function signatures
ul:?sl
oo:(`c$#ul),,/ul
o,:num[#oo],oo

/ 0x02(import section)
/ 0x03(function section, type declarations)
oo:num[#f],/{num@*&ul~'(,#ul)#,x}'sl
o,:0x03,num[#oo],oo

/ 0x04(table section)
/ 0x05(linear memory section)
o,:0x0503010001               / initial memory 1(64kB)

/ 0x06(global section)
/ 0x07(export section)        / export memory to "m" and all single-letter functions in f
ln:{$[iv=1;#`\x;#$x]}         / all strings have length 1 in ⍳: need to split.
str:{$[iv=1;`c$x;$x]}         / symbol to chars (⍳: string to []byte)
ex:(!f)@&{1=ln x}'!f
g:{0x01,(str x),0x00,num[*&x=!f]}
mem:0x016d0200                / export memory at index 0
oo:num[1+#ex],mem,$[iv=1;`c$`/g'ex;,/g'ex]
o,:0x07,num[#oo],oo

/ 0x08(start section)
o,:0x0801,num@*&`ini=!f

/ 0x09(element section)
/ 0x0a(code section)
h:{num[#?x],,/(+/+(x=)'?x),'?x} / array of local declarations I,I,F,F,F→2,2,I,3,F
g:{h[x 2],x[3],0x0b}            / function body: locals, instructions
oo:(num@#f),,/{num[#g x],g x}'f[!f]
o,:0x0a,num[#oo],oo

/ 0x0b(data section)

$[iv=1;print o;o]