kwac - k webassembly compiler

s is a k program that emits webassembly byte code.
The resulting program is a k interpreter itself (a subset of k7).

The goal is for these programs to output the same result 0x006173… for input s:
k7:           k < s
⍳:            ⍳ s
k.go:         go test|sed 1q
metacircular: k < s|wasm -|wasm -|…

k.go is a reference implementation that uses the same memory layout as the wasm version.
A repl is hosted on ktye.github.io

Type and memory system
32-bit system, buddy allocater with 8 byte headers
types (ifzschld) int32, float64, complex128, symbol64, byte8, func32, list32, dict64
space for 15 types
8 byte header:
  4 bits type p>>28
 28 bits vector size, atom: p&0x0fffffff == 0x0fffffff
 free block: type is 0:     p&0xf0000000 == 0
 bucket type is stored only in free blocks at p (uint32 value)
 32 bits (p+1) are refcount for used blocks or pointer to next free

Initial memory (64kB)
 p[0],p[1]   block header
 p[2]        total allocated memory log2 (initial 64k, max 4G) uint32
 p[3]        pointer to ktree (dict)
 followed by free list:
 p[4..31]    points to free block of bucket size n, n = 4..31
 ?byte[512...] bucket 9 stores type size vector: 0,4,8,16,8,1,4,4,8

Wasm reference
 webassembly.github.io/wabt/demo/wat2wasm (interactive)
 sunfishcode/wasm-reference-manual/blob/master/WebAssembly.md